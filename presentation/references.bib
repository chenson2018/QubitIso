@misc{vqc,
  author = {Rand, Robert},
  title = {{Verified Quantum Computing}},
  howpublished = "\url{https://rand.cs.uchicago.edu/vqc/index.html}",
  year = {2019}, 
}

@misc{wells,
  author = {Wells, James},
  title = {{Lectures on Standard Model Particle Physics}},
  howpublished = "\url{https://indico.cern.ch/event/243629/}",
  year = {2013}, 
}

@misc{lie,
  author = {Savage, Alistair},
  title = {{Introduction to Lie Groups}},
  howpublished = "\url{https://alistairsavage.ca/mat4144/notes/MAT4144-5158-LieGroups.pdf}",
  year = {2015}, 
}

@book{gallier2020linear,    
  title={Linear Algebra and Optimization with Applications to Machine Learning},  author={Gallier, J.H. and Quaintance, J.},
  number={v. 1},
  isbn={9789811206405},
  url={https://books.google.com/books?id=b6OizQEACAAJ},
  year={2020},
  publisher={World Scientific Publishing Company Pte. Limited}
}

@misc{lie,
  author = {Savage, Alistair},
  title = {{Introduction to Lie Groups}},
  howpublished = "\url{https://alistairsavage.ca/mat4144/notes/MAT4144-5158-LieGroups.pdf}",
  year = {2015}, 
}

@article{hietala2021verified,
  title         = {A Verified Optimizer for {{Quantum}} Circuits},
  author        = {Hietala, Kesha and Rand, Robert and Hung, Shih-Han and Wu, Xiaodi and Hicks, Michael},
  year          = {2021},
  month         = jan,
  journal       = {Proceedings of the ACM on Programming Languages},
  volume        = {5},
  number        = {POPL},
  eid           = {37},
  pages         = {37},
  numpages      = {29},
  doi           = {10.1145/3434318},
  archiveprefix = {arXiv},
  eprint        = {1912.02250},
  url           = {https://github.com/inQWIRE/SQIR},
  abstract      = {We present VOQC, the first fully verified optimizer for quantum circuits, written using the Coq proof assistant. Quantum circuits are expressed as programs in a simple, low-level language called SQIR, a simple quantum intermediate representation, which is deeply embedded in Coq. Optimizations and other transformations are expressed as Coq functions, which are proved correct with respect to a semantics of SQIR programs. SQIR uses a semantics of matrices of complex numbers, which is the standard for quantum computation, but treats matrices symbolically in order to reason about programs that use an arbitrary number of quantum bits. SQIR's careful design and our provided automation make it possible to write and verify a broad range of optimizations in VOQC, including full-circuit transformations from cutting-edge optimizers.},
  keywords      = {programming languages, formal verification, certified compilation, quantum computing, circuit optimization},
  note          = {POPL '21}
}

@inproceedings{hietala2020proving,
  title     = {{Proving Quantum Programs Correct}},
  author    = {Hietala, Kesha and Rand, Robert and Hung, Shih-Han and Li, Liyi and Hicks, Michael},
  year      = {2021},
  month     = jun,
  booktitle = {12th International Conference on Interactive Theorem Proving (ITP 2021)},
  editor    = {Cohen, Liron and Kaliszyk, Cezary},
  publisher = {{Schloss Dagstuhl -- Leibniz-Zentrum f{\"u}r Informatik}},
  address   = {Dagstuhl, Germany},
  series    = {Leibniz International Proceedings in Informatics (LIPIcs)},
  volume    = {193},
  eid       = {21},
  pages     = {21:1--21:19},
  doi       = {10.4230/LIPIcs.ITP.2021.21},
  url       = {https://github.com/inQWIRE/SQIR},
  abstract  = {As quantum computing progresses steadily from theory into practice, programmers will face a common problem: How can they be sure that their code does what they intend it to do? This paper presents encouraging results in the application of mechanized proof to the domain of quantum programming in the context of the SQIR development. It verifies the correctness of a range of a quantum algorithms including Grover's algorithm and quantum phase estimation, a key component of Shor's algorithm. In doing so, it aims to highlight both the successes and challenges of formal verification in the quantum context and motivate the theorem proving community to target quantum computing as an application domain.},
  keywords  = {formal verification, quantum computing, proof engineering}
}

@misc{stack_ex,
    title = {Who discovered the covering homomorphism between SU(2) and SO(3)?},
    authorurl = {https://hsm.stackexchange.com/users/3428/john},
    year= {2019},
	  howpublished = "History of Science and Mathematics Stack Exchange \url{https://hsm.stackexchange.com/questions/11057/who-discovered-the-covering-homomorphism-between-su2-and-so3}"
}
